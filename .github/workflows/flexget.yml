name: FlexGet

on:
  workflow_dispatch:
  watch:
    types: [started]
  repository_dispatch:
    types: ["FlexGet execute", "FlexGet learn"]

env:
  RCLONECONF: ${{ secrets.RCLONECONF }}
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  CHECK_TASKFILENAME: "flexget"
  EVENT: "FlexGet execute"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      checkresult: ${{ steps.checkresult.outputs.test }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: 'xusenfa/autoscriptbackend'
          path: autoscriptbackend
          token: '${{ secrets.REPO_TOKEN }}'
      - name: check
        run: |
          python3 autoscriptbackend/check.py
      - id: checkresult
        run: echo "::set-output name=test::${{ env.RUN }}"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Set up Rclone &Copy backend File
        if: contains(env.RUN, 'run') || github.event.action == 'FlexGet learn'
        run: |
          wget --retry-on-http-error=502,503 -t 0 -O rclone-linux-amd64.zip https://github.com/rclone/rclone/releases/download/v1.59.2/rclone-v1.59.2-linux-amd64.zip
          unzip rclone-linux-amd64.zip
          sudo cp rclone*/rclone /usr/bin/rclone
          mkdir -p ~/.config/rclone
          base64 -di > ~/.config/rclone/rclone.conf <<< $RCLONECONF
      - name: Install & Configure FlexGet
        if: contains(env.RUN, 'run') || github.event.action == 'FlexGet learn'
        run: |
          pip install flexget
          cp -rl autoscriptbackend/flexget/. ~/.flexget
      - name: Check Aria2
        if: github.event.action == 'FlexGet execute' && contains(env.RUN, 'run')
        run: |
          python3 autoscriptbackend/checkaria2.py
      - name: FlexGet execute
        if: github.event.action == 'FlexGet execute' && contains(env.RUN, 'run')
        run: |
          rclone copyto gdpersonal:flexget/db-config.sqlite ~/.flexget/db-config.sqlite
          python3 autoscriptbackend/getrss.py
          python3 autoscriptbackend/checkaria2.py
          flexget execute
          python3 autoscriptbackend/databasecleanup.py
      - name: FlexGet learn
        if: github.event.action == 'FlexGet learn'
        run: |
          rclone copyto gdpersonal:flexget/db-config.sqlite ~/.flexget/db-config.sqlite
          python3 autoscriptbackend/getrss.py
          flexget execute --learn
      - name: Upload FlexGet database
        if: contains(env.RUN, 'run') || github.event.action == 'FlexGet learn'
        run: |
          rclone copyto ~/.flexget/db-config.sqlite gdpersonal:flexget/db-config.sqlite
  call-next-task:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          repository: "xusenfa/autoscriptbackend"
          path: autoscriptbackend
          token: "${{ secrets.REPO_TOKEN }}"
      - name: call next task
        if: contains(needs.build.outputs.checkresult, 'run')
        run: |
          python3 autoscriptbackend/dispatchrclone.py
